!!org.wso2.carbon.identity.api.server.userstore.v1.model.UserStoreConfigurations
claimAttributeMappings: []
description: ABC Employees UserStore in DEV
id: QUJDRW1wbG95ZWVz
isLocal: true
name: ABCEmployees
properties:
- name: connectionProperties
  value: ""
- name: AddRoleToUserSQLCaseInsensitive-mssql
  value: INSERT INTO UM_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_TENANT_ID) SELECT (SELECT
    UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?),(SELECT UM_ID FROM
    UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?), (?)
- name: UserFilterPaginatedSQL
  value: SELECT UM_USER_NAME FROM UM_USER WHERE UM_USER_NAME LIKE ? AND UM_TENANT_ID=?
    ORDER BY UM_USER_NAME ASC LIMIT ? OFFSET ?
- name: OnDeleteUserRemoveUserRoleMappingSQL
  value: DELETE FROM UM_USER_ROLE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    UM_USER_NAME=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: GetPaginatedUserLisForPropertySQL-mssql
  value: SELECT UM_USER_NAME FROM (SELECT UM_USER_NAME,ROW_NUMBER() OVER (ORDER BY
    UM_USER_NAME) AS RowNum FROM UM_USER,UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME=? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?) AS P WHERE P.RowNum BETWEEN ? AND ?
- name: MaxUserNameListLength
  value: "100"
- name: defaultCatalog
  value: ""
- name: AddUserToRoleSQL
  value: INSERT INTO UM_USER_ROLE (UM_USER_ID, UM_ROLE_ID, UM_TENANT_ID) VALUES ((SELECT
    UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?),(SELECT UM_ID FROM
    UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?), ?)
- name: password
  value: '********'
- name: GetUserProfileNamesSQLCaseInsensitive
  value: SELECT DISTINCT UM_PROFILE_ID FROM UM_USER_ATTRIBUTE WHERE UM_USER_ID=(SELECT
    UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?) AND
    UM_TENANT_ID=?
- name: GetRoleListSQLWithEscape
  value: SELECT UM_ROLE_NAME, UM_TENANT_ID, UM_SHARED_ROLE FROM UM_ROLE WHERE UM_ROLE_NAME
    LIKE ? ESCAPE ? AND UM_TENANT_ID=? AND UM_SHARED_ROLE ='0' ORDER BY UM_ROLE_NAME
- name: GetPaginatedUserCountForPropertySQL
  value: SELECT COUNT (UM_USER_NAME) FROM UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: GetUserPropertyForProfileWithIDSQL
  value: SELECT UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE, UM_USER WHERE UM_USER.UM_ID
    = UM_USER_ATTRIBUTE.UM_USER_ID AND UM_USER.UM_USER_ID=? AND UM_ATTR_NAME=? AND
    UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: AddUserPropertySQLCaseInsensitive-openedge
  value: INSERT INTO UM_USER_ATTRIBUTE (UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE, UM_PROFILE_ID,
    UM_TENANT_ID) SELECT UM_ID, ?, ?, ?, ? FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?)
    AND UM_TENANT_ID=?
- name: UserFilterWithIDSQLCaseInsensitive
  value: SELECT UM_USER_ID, UM_USER_NAME FROM UM_USER WHERE LOWER(UM_USER_NAME) LIKE
    LOWER(?) AND UM_TENANT_ID=? ORDER BY UM_USER_NAME
- name: minIdle
  value: "5"
- name: IsBulkImportSupported
  value: "false"
- name: UserRoleExistWithIDSQL
  value: SELECT UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE UM_USER.UM_USER_ID=?
    AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID
    AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
    AND UM_ROLE_NAME LIKE ?
- name: GetUserListForPropertyWithIDSQLCaseInsensitive
  value: SELECT DISTINCT UM_USER.UM_USER_ID FROM UM_USER, UM_USER_ATTRIBUTE WHERE
    UM_USER_ATTRIBUTE.UM_USER_ID = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME
    =? AND LOWER(UM_USER_ATTRIBUTE.UM_ATTR_VALUE) LIKE LOWER(?) AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=?
    AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: UserFilterPaginatedSQLCaseInsensitiveCountWithID
  value: SELECT COUNT (UM_USER_ID) FROM UM_USER WHERE LOWER(UM_USER_NAME) LIKE LOWER(?)
    AND UM_TENANT_ID=?
- name: GetUserListOfRoleFilterSQL
  value: SELECT UM_USER_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE UM_USER.UM_USER_NAME
    LIKE ? AND UM_ROLE.UM_ROLE_NAME=? AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND
    UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: GetUserListForClaimValueWithIDSQL
  value: SELECT DISTINCT UM_USER.UM_USER_ID FROM UM_USER, UM_USER_ATTRIBUTE WHERE
    UM_USER_ATTRIBUTE.UM_USER_ID = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME
    =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE =? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=?
    AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: GetTenantIDFromUserNameSQL
  value: SELECT UM_TENANT_ID FROM UM_USER WHERE UM_USER_NAME=?
- name: UserFilterSQLCaseInsensitive
  value: SELECT UM_USER_NAME FROM UM_USER WHERE LOWER(UM_USER_NAME) LIKE LOWER(?)
    AND UM_TENANT_ID=? ORDER BY UM_USER_NAME
- name: UsernameJavaScriptRegEx
  value: ^[\S]{5,30}$
- name: GetUserListOfRoleFilterWithIDSQL
  value: SELECT UM_USER.UM_USER_ID, UM_USER.UM_USER_NAME FROM UM_USER_ROLE, UM_ROLE,
    UM_USER WHERE UM_USER.UM_USER_NAME LIKE ? AND UM_ROLE.UM_ROLE_NAME=? AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID
    AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID AND UM_USER_ROLE.UM_TENANT_ID=? AND
    UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: AddRoleToUserWithIDSQL
  value: INSERT INTO UM_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_TENANT_ID) VALUES ((SELECT
    UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?),(SELECT UM_ID FROM
    UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?), ?)
- name: UserRoleExistSQL
  value: SELECT UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE UM_USER.UM_USER_NAME=?
    AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID
    AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
    AND UM_ROLE_NAME LIKE ?
- name: IsUserNameExistingSQLCaseInsensitive
  value: SELECT UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?
- name: SelectUserWithIDSQL
  value: SELECT UM_USER.UM_USER_ID, UM_USER.UM_USER_NAME, UM_USER.UM_USER_PASSWORD,
    UM_USER.UM_SALT_VALUE, UM_USER.UM_REQUIRE_CHANGE, UM_USER.UM_CHANGED_TIME FROM
    UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID = UM_USER.UM_ID
    AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE =? AND
    UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: rollbackOnReturn
  value: "false"
- name: AddUserToRoleSQLCaseInsensitive-mssql
  value: INSERT INTO UM_USER_ROLE (UM_USER_ID, UM_ROLE_ID, UM_TENANT_ID) SELECT (SELECT
    UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?),(SELECT
    UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?),(?)
- name: DeleteUserPropertyWWithIDSQL
  value: DELETE FROM UM_USER_ATTRIBUTE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE UM_USER_ID=? AND UM_TENANT_ID=?) AND UM_ATTR_NAME=? AND UM_PROFILE_ID=?
    AND UM_TENANT_ID=?
- name: GetUserPropertyForProfileSQL
  value: SELECT UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE, UM_USER WHERE UM_USER.UM_ID
    = UM_USER_ATTRIBUTE.UM_USER_ID AND UM_USER.UM_USER_NAME=? AND UM_ATTR_NAME=? AND
    UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: UpdateUserPropertySQL
  value: UPDATE UM_USER_ATTRIBUTE SET UM_ATTR_VALUE=? WHERE UM_USER_ID=(SELECT UM_ID
    FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?) AND UM_ATTR_NAME=? AND UM_PROFILE_ID=?
    AND UM_TENANT_ID=?
- name: IsUserRoleExistSQLCaseInsensitive
  value: SELECT UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE LOWER(UM_USER.UM_USER_NAME)=LOWER(?)
    AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID
    AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
    AND UM_ROLE_NAME LIKE ?
- name: DeleteRoleSQL
  value: DELETE FROM UM_ROLE WHERE UM_ROLE_NAME = ? AND UM_TENANT_ID=?
- name: UpdateRoleNameSQL
  value: UPDATE UM_ROLE set UM_ROLE_NAME=? WHERE UM_ROLE_NAME = ? AND UM_TENANT_ID=?
- name: useEquals
  value: "true"
- name: AddUserPropertyWithIDSQL
  value: INSERT INTO UM_USER_ATTRIBUTE (UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE, UM_PROFILE_ID,
    UM_TENANT_ID) VALUES ((SELECT UM_ID FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?),
    ?, ?, ?, ?)
- name: GetPaginatedUserCountForPropertyWithIDSQL
  value: SELECT COUNT (UM_USER.UM_USER_ID) FROM UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: GetUserListOfRoleSQL
  value: SELECT UM_USER_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE UM_ROLE.UM_ROLE_NAME=?
    AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID
    AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: OnDeleteUserRemoveUserAttributeSQLCaseInsensitive
  value: DELETE FROM UM_USER_ATTRIBUTE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: CountInternalRolesSQL
  value: SELECT COUNT(UM_ID) AS RESULT FROM UM_HYBRID_ROLE WHERE UM_ROLE_NAME NOT
    LIKE 'Application%' AND UM_ROLE_NAME LIKE ? AND UM_TENANT_ID = ?
- name: GetPaginatedUserLisForPropertySQL
  value: SELECT UM_USER_NAME FROM UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=? ORDER BY UM_USER_NAME ASC LIMIT ? OFFSET ?
- name: jdbcInterceptors
  value: ""
- name: GetPaginatedUserLisForPropertySQL-db2
  value: SELECT UM_USER_NAME FROM (SELECT ROW_NUMBER() OVER (ORDER BY UM_USER_NAME)
    AS rn, UM_USER_NAME FROM UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=? ) WHERE rn BETWEEN ? AND ?
- name: UserFilterPaginatedSQLCaseInsensitive-oracle
  value: SELECT UM_USER_NAME FROM (SELECT UM_USER_NAME,UM_TENANT_ID, rownum AS rnum
    FROM (SELECT UM_USER_NAME, UM_TENANT_ID FROM UM_USER ORDER BY  UM_USER_NAME) WHERE
    UM_USER_NAME LIKE LOWER(?) AND UM_TENANT_ID=? AND rownum <= ?) WHERE  rnum > ?
- name: UserRoleSQL
  value: SELECT UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE UM_USER.UM_USER_NAME=?
    AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID
    AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: testOnBorrow
  value: "false"
- name: minEvictableIdleTimeMillis
  value: "60000"
- name: GetUsersPropertiesForProfileSQLCaseInsensitive
  value: SELECT UM_USER_NAME,UM_ATTR_NAME, UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE, UM_USER
    WHERE UM_USER.UM_ID = UM_USER_ATTRIBUTE.UM_USER_ID AND LOWER(UM_USER.UM_USER_NAME)
    IN (?) AND UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: UserSharedRoleWithIDSQL
  value: SELECT UM_ROLE_NAME, UM_ROLE.UM_TENANT_ID, UM_SHARED_ROLE FROM UM_SHARED_USER_ROLE
    INNER JOIN UM_USER ON UM_SHARED_USER_ROLE.UM_USER_ID = UM_USER.UM_ID INNER JOIN
    UM_ROLE ON UM_SHARED_USER_ROLE.UM_ROLE_ID = UM_ROLE.UM_ID WHERE UM_USER.UM_USER_ID
    = ? AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID = UM_USER.UM_TENANT_ID AND UM_SHARED_USER_ROLE.UM_ROLE_TENANT_ID
    = UM_ROLE.UM_TENANT_ID AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID = ?
- name: GetUserListOfSharedRoleSQL
  value: SELECT UM_USER_NAME FROM UM_SHARED_USER_ROLE INNER JOIN UM_USER ON UM_SHARED_USER_ROLE.UM_USER_ID
    = UM_USER.UM_ID INNER JOIN UM_ROLE ON UM_SHARED_USER_ROLE.UM_ROLE_ID = UM_ROLE.UM_ID
    WHERE UM_ROLE.UM_ROLE_NAME= ? AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID = UM_USER.UM_TENANT_ID
    AND UM_SHARED_USER_ROLE.UM_ROLE_TENANT_ID = UM_ROLE.UM_TENANT_ID
- name: PasswordJavaRegExViolationErrorMsg
  value: Password pattern policy violated
- name: AddSharedRoleToUserSQL
  value: INSERT INTO UM_SHARED_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_USER_TENANT_ID,
    UM_ROLE_TENANT_ID) VALUES ((SELECT UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND
    UM_TENANT_ID=?),(SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?),
    ?, ?)
- name: maxActive
  value: "40"
- name: UniqueID
  value: d1b919fb-d08c-490d-8747-d11fcf7451bd
- name: RemoveUserFromSharedRoleSQL
  value: DELETE FROM UM_SHARED_USER_ROLE WHERE UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE
    WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE UM_USER_NAME=? AND UM_TENANT_ID=?) AND UM_USER_TENANT_ID=? AND UM_ROLE_TENANT_ID
    = ?
- name: IsUserExistingSQL
  value: SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?
- name: WriteGroups
  value: "true"
- name: Hash.Algorithm.Properties
  value: '{}'
- name: CountRolesSQL
  value: SELECT COUNT(UM_ROLE_NAME) AS RESULT FROM UM_ROLE WHERE UM_ROLE_NAME LIKE
    ? AND UM_TENANT_ID = ?
- name: OnDeleteRoleRemovePermissionsSQL
  value: OnDeleteRoleRemovePermissionsSQL
- name: UserNameUniqueAcrossTenants
  value: "false"
- name: AddDomainSQL
  value: INSERT INTO UM_DOMAIN (UM_DOMAIN_NAME, UM_TENANT_ID) VALUES (?, ?)
- name: UserFilterWithIDSQLCaseInsensitiveWithEscape
  value: SELECT UM_USER_ID, UM_USER_NAME FROM UM_USER WHERE LOWER(UM_USER_NAME) LIKE
    LOWER(?) ESCAPE ? AND UM_TENANT_ID=? ORDER BY UM_USER_NAME
- name: Disabled
  value: "false"
- name: MultiAttributeSeparator
  value: ','
- name: GetUserListForClaimValueWithIDSQLCaseInsensitive
  value: SELECT DISTINCT UM_USER.UM_USER_ID FROM UM_USER, UM_USER_ATTRIBUTE WHERE
    UM_USER_ATTRIBUTE.UM_USER_ID = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME
    =? AND LOWER(UM_USER_ATTRIBUTE.UM_ATTR_VALUE)=LOWER(?) AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=?
    AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: ReadOnly
  value: "false"
- name: defaultReadOnly
  value: ""
- name: maxWait
  value: "60000"
- name: DeleteUserWithIDSQL
  value: DELETE FROM UM_USER WHERE UM_USER_ID = ? AND UM_TENANT_ID=?
- name: UserSharedRoleSQL
  value: SELECT UM_ROLE_NAME, UM_ROLE.UM_TENANT_ID, UM_SHARED_ROLE FROM UM_SHARED_USER_ROLE
    INNER JOIN UM_USER ON UM_SHARED_USER_ROLE.UM_USER_ID = UM_USER.UM_ID INNER JOIN
    UM_ROLE ON UM_SHARED_USER_ROLE.UM_ROLE_ID = UM_ROLE.UM_ID WHERE UM_USER.UM_USER_NAME
    = ? AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID = UM_USER.UM_TENANT_ID AND UM_SHARED_USER_ROLE.UM_ROLE_TENANT_ID
    = UM_ROLE.UM_TENANT_ID AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID = ?
- name: GetUserPropertiesForProfileSQL
  value: SELECT UM_ATTR_NAME, UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE, UM_USER WHERE
    UM_USER.UM_ID = UM_USER_ATTRIBUTE.UM_USER_ID AND UM_USER.UM_USER_NAME=? AND UM_PROFILE_ID=?
    AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: UserFilterPaginatedSQL-oracle
  value: SELECT UM_USER_NAME FROM (SELECT UM_USER_NAME, UM_TENANT_ID, rownum AS rnum
    FROM (SELECT UM_USER_NAME, UM_TENANT_ID FROM UM_USER ORDER BY UM_USER_NAME) WHERE
    UM_USER_NAME LIKE ? AND UM_TENANT_ID=? AND rownum <= ?) WHERE  rnum > ?
- name: GetUserLisForPropertySQL
  value: SELECT DISTINCT UM_USER_NAME FROM UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: IsDomainExistingSQL
  value: SELECT UM_DOMAIN_ID FROM UM_DOMAIN WHERE UM_DOMAIN_NAME=? AND UM_TENANT_ID=?
- name: GetPaginatedUserLisForPropertyWithIDSQL
  value: SELECT UM_USER.UM_USER_ID, UM_USER.UM_USER_NAME FROM UM_USER, UM_USER_ATTRIBUTE
    WHERE UM_USER_ATTRIBUTE.UM_USER_ID = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME
    =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=?
    AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=? ORDER BY UM_USER_NAME
    ASC LIMIT ? OFFSET ?
- name: AddUserToRoleWithIDSQL
  value: INSERT INTO UM_USER_ROLE (UM_USER_ID, UM_ROLE_ID, UM_TENANT_ID) VALUES ((SELECT
    UM_ID FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?),(SELECT UM_ID FROM UM_ROLE
    WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?), ?)
- name: Class
  value: org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager
- name: UserSharedRoleSQLCaseInsensitive
  value: SELECT UM_ROLE_NAME, UM_ROLE.UM_TENANT_ID, UM_SHARED_ROLE FROM UM_SHARED_USER_ROLE
    INNER JOIN UM_USER ON UM_SHARED_USER_ROLE.UM_USER_ID = UM_USER.UM_ID INNER JOIN
    UM_ROLE ON UM_SHARED_USER_ROLE.UM_ROLE_ID = UM_ROLE.UM_ID WHERE LOWER(UM_USER.UM_USER_NAME)
    = LOWER(?) AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID = UM_USER.UM_TENANT_ID AND
    UM_SHARED_USER_ROLE.UM_ROLE_TENANT_ID = UM_ROLE.UM_TENANT_ID AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID
    = ?
- name: AddSharedRoleToUserSQLCaseInsensitive
  value: INSERT INTO UM_SHARED_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_USER_TENANT_ID,
    UM_ROLE_TENANT_ID) VALUES ((SELECT UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND
    UM_TENANT_ID=?), (SELECT UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?)
    AND UM_TENANT_ID=?), ?, ?)
- name: initSQL
  value: ""
- name: validationQueryTimeout
  value: ""
- name: SelectUserSQL
  value: SELECT * FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?
- name: validationQuery
  value: ""
- name: DisplayNameAttribute
  value: ""
- name: UserNameUniqueAcrossTenantsSQLCaseInsensitive
  value: SELECT UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?)
- name: CountApplicationRolesSQL
  value: SELECT COUNT(UM_ID) AS RESULT FROM UM_HYBRID_ROLE WHERE UM_ROLE_NAME LIKE
    ? AND UM_TENANT_ID = ?
- name: AddUserPropertySQL-openedge
  value: INSERT INTO UM_USER_ATTRIBUTE (UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE, UM_PROFILE_ID,
    UM_TENANT_ID) SELECT UM_ID, ?, ?, ?, ? FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?
- name: UserFilterPaginatedCountSQL
  value: SELECT COUNT(UM_USER_NAME) FROM UM_USER WHERE UM_USER_NAME LIKE ? AND UM_TENANT_ID=?
- name: RemoveRoleFromUserSQL
  value: DELETE FROM UM_USER_ROLE WHERE UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE WHERE
    UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    UM_USER_NAME=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: GetSharedRoleListSQL
  value: SELECT UM_ROLE_NAME, UM_TENANT_ID, UM_SHARED_ROLE FROM UM_ROLE WHERE UM_ROLE_NAME
    LIKE ? AND UM_SHARED_ROLE ='1' ORDER BY UM_ROLE_NAME
- name: defaultAutoCommit
  value: ""
- name: PasswordDigest
  value: SHA-256
- name: SelectUserIDFromUserNameSQLCaseInsensitive
  value: SELECT UM_USER_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?
- name: initialSize
  value: ""
- name: OnDeleteUserRemoveUserRoleMappingSQLCaseInsensitive
  value: DELETE FROM UM_USER_ROLE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: AddRoleToUserSQL-mssql
  value: INSERT INTO UM_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_TENANT_ID) SELECT (SELECT
    UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?),(SELECT UM_ID FROM
    UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?), (?)
- name: AddRoleToUserSQLCaseInsensitive
  value: INSERT INTO UM_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_TENANT_ID) VALUES ((SELECT
    UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?),(SELECT UM_ID FROM
    UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?), ?)
- name: GetSharedRoleListSQLH2
  value: SELECT UM_ROLE_NAME, UM_TENANT_ID, UM_SHARED_ROLE FROM UM_ROLE WHERE UM_ROLE_NAME
    LIKE ? AND UM_SHARED_ROLE =TRUE ORDER BY UM_ROLE_NAME
- name: userName
  value: admin
- name: numTestsPerEvictionRun
  value: ""
- name: UserRoleWithIDSQL
  value: SELECT UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE UM_USER.UM_USER_ID=?
    AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID
    AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: UserFilterPaginatedSQL-mssql
  value: SELECT UM_USER_NAME FROM (SELECT UM_USER_NAME,UM_TENANT_ID, ROW_NUMBER()
    OVER (ORDER BY UM_USER_NAME) AS RowNum FROM UM_USER) AS P WHERE P.UM_USER_NAME
    LIKE ? AND P.UM_TENANT_ID= ? AND P.RowNum BETWEEN ? AND ?
- name: AddUserPropertySQLCaseInsensitive-mssql
  value: INSERT INTO UM_USER_ATTRIBUTE (UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE, UM_PROFILE_ID,
    UM_TENANT_ID) SELECT (SELECT UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?)
    AND UM_TENANT_ID=?), (?), (?), (?), (?)
- name: AddSharedRoleSQL
  value: UPDATE UM_ROLE SET UM_SHARED_ROLE = ? WHERE UM_ROLE_NAME = ? AND UM_TENANT_ID
    = ?
- name: IsUserNameExistingSQL
  value: SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?
- name: SelectUserNameSQLCaseInsensitive
  value: SELECT UM_USER_ID, UM_USER_NAME, UM_USER_PASSWORD, UM_SALT_VALUE, UM_REQUIRE_CHANGE,
    UM_CHANGED_TIME FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?
- name: UserIDUniqueAcrossTenantsSQLWithID
  value: SELECT UM_ID FROM UM_USER WHERE UM_USER_ID=?
- name: GetUserPropertiesForProfileWithIDSQL
  value: SELECT UM_ATTR_NAME, UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE, UM_USER WHERE
    UM_USER.UM_ID = UM_USER_ATTRIBUTE.UM_USER_ID AND UM_USER.UM_USER_ID=? AND UM_PROFILE_ID=?
    AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: GetUserIDFromUserNameSQLCaseInsensitive
  value: SELECT UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?
- name: SelectUserNameFromUserIDSQL
  value: SELECT UM_USER_NAME FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?
- name: GetUsersPropertiesForProfileSQL
  value: SELECT UM_USER_NAME,UM_ATTR_NAME, UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE, UM_USER
    WHERE UM_USER.UM_ID = UM_USER_ATTRIBUTE.UM_USER_ID AND UM_USER.UM_USER_NAME IN
    (?) AND UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: AddUserWithIDSQL
  value: INSERT INTO UM_USER (UM_USER_ID, UM_USER_NAME, UM_USER_PASSWORD, UM_SALT_VALUE,
    UM_REQUIRE_CHANGE, UM_CHANGED_TIME, UM_TENANT_ID) VALUES (?, ?, ?, ?, ?, ?, ?)
- name: PasswordJavaScriptRegEx
  value: ^[\S]{5,30}$
- name: SelectUserIDSQL
  value: SELECT UM_USER_ID, UM_USER_NAME, UM_USER_PASSWORD, UM_SALT_VALUE, UM_REQUIRE_CHANGE,
    UM_CHANGED_TIME FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?
- name: logAbandoned
  value: "false"
- name: GetUserListOfSharedRoleFilterSQL
  value: SELECT UM_USER_NAME FROM UM_SHARED_USER_ROLE INNER JOIN UM_USER ON UM_SHARED_USER_ROLE.UM_USER_ID
    = UM_USER.UM_ID INNER JOIN UM_ROLE ON UM_SHARED_USER_ROLE.UM_ROLE_ID = UM_ROLE.UM_ID
    WHERE UM_USER.UM_USER_NAME LIKE ? AND UM_ROLE.UM_ROLE_NAME= ? AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID
    = UM_USER.UM_TENANT_ID AND UM_SHARED_USER_ROLE.UM_ROLE_TENANT_ID = UM_ROLE.UM_TENANT_ID
- name: GetUserListOfSharedRoleFilterWithIDSQL
  value: SELECT UM_USER.UM_USER_ID, UM_USER.UM_USER_NAME FROM UM_SHARED_USER_ROLE
    INNER JOIN UM_USER ON UM_SHARED_USER_ROLE.UM_USER_ID = UM_USER.UM_ID INNER JOIN
    UM_ROLE ON UM_SHARED_USER_ROLE.UM_ROLE_ID = UM_ROLE.UM_ID WHERE UM_USER.UM_USER_NAME
    LIKE ? AND UM_ROLE.UM_ROLE_NAME= ? AND UM_SHARED_USER_ROLE.UM_USER_TENANT_ID =
    UM_USER.UM_TENANT_ID AND UM_SHARED_USER_ROLE.UM_ROLE_TENANT_ID = UM_ROLE.UM_TENANT_ID
- name: GetUserPropertiesForProfileSQLCaseInsensitive
  value: SELECT UM_ATTR_NAME, UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE, UM_USER WHERE
    UM_USER.UM_ID = UM_USER_ATTRIBUTE.UM_USER_ID AND LOWER(UM_USER.UM_USER_NAME)=LOWER(?)
    AND UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: maxIdle
  value: "6"
- name: removeAbandoned
  value: "false"
- name: UserFilterSQLCaseInsensitiveWithEscape
  value: SELECT UM_USER_NAME FROM UM_USER WHERE LOWER(UM_USER_NAME) LIKE LOWER(?)
    ESCAPE ? AND UM_TENANT_ID=? ORDER BY UM_USER_NAME
- name: AddUserToRoleSQL-openedge
  value: INSERT INTO UM_USER_ROLE (UM_USER_ID, UM_ROLE_ID, UM_TENANT_ID) SELECT UU.UM_ID,
    UR.UM_ID, ? FROM UM_USER UU, UM_ROLE UR WHERE UU.UM_USER_NAME=? AND UU.UM_TENANT_ID=?
    AND UR.UM_ROLE_NAME=? AND UR.UM_TENANT_ID=?
- name: AddRoleSQL
  value: INSERT INTO UM_ROLE (UM_ROLE_NAME, UM_TENANT_ID) VALUES (?, ?)
- name: MaxRoleNameListLength
  value: "100"
- name: AddUserPropertySQL-mssql
  value: INSERT INTO UM_USER_ATTRIBUTE (UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE, UM_PROFILE_ID,
    UM_TENANT_ID) SELECT (SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?),
    (?), (?), (?), (?)
- name: OnDeleteRoleRemoveUserRoleMappingSQL
  value: DELETE FROM UM_USER_ROLE WHERE UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE WHERE
    UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: DeleteUserSQL
  value: DELETE FROM UM_USER WHERE UM_USER_NAME = ? AND UM_TENANT_ID=?
- name: AddRoleToUserSQL-openedge
  value: INSERT INTO UM_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_TENANT_ID) SELECT UR.UM_ID,
    UU.UM_ID, ? FROM UM_ROLE UR, UM_USER UU WHERE UR.UM_ROLE_NAME=? AND UR.UM_TENANT_ID=?
    AND UU.UM_USER_NAME=? AND UU.UM_TENANT_ID=?
- name: abandonWhenPercentageFull
  value: ""
- name: DomainName
  value: ABCEmployees
- name: UpdateUserPropertyWithIDSQL
  value: UPDATE UM_USER_ATTRIBUTE SET UM_ATTR_VALUE=? WHERE UM_USER_ID=(SELECT UM_ID
    FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?) AND UM_ATTR_NAME=? AND UM_PROFILE_ID=?
    AND UM_TENANT_ID=?
- name: UserFilterPaginatedSQLCaseInsensitive
  value: SELECT UM_USER_NAME FROM UM_USER WHERE LOWER(UM_USER_NAME) LIKE LOWER(?)
    AND UM_TENANT_ID=? ORDER BY UM_USER_NAME ASC LIMIT ? OFFSET ?
- name: UserFilterSQLWithEscape
  value: SELECT UM_USER_NAME FROM UM_USER WHERE UM_USER_NAME LIKE ? ESCAPE ? AND UM_TENANT_ID=?
    ORDER BY UM_USER_NAME
- name: UserFilterPaginatedCountWithIDSQL
  value: SELECT COUNT(UM_USER_ID) FROM UM_USER WHERE UM_USER_NAME LIKE ? AND UM_TENANT_ID=?
- name: AddSharedRoleToUserWithIDSQL
  value: INSERT INTO UM_SHARED_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_USER_TENANT_ID,
    UM_ROLE_TENANT_ID) VALUES ((SELECT UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND
    UM_TENANT_ID=?),(SELECT UM_ID FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?),
    ?, ?)
- name: RemoveUserFromRoleSQLCaseInsensitive
  value: DELETE FROM UM_USER_ROLE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?) AND UM_ROLE_ID=(SELECT UM_ID
    FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: GetUserProfileNamesWithIDSQL
  value: SELECT DISTINCT UM_PROFILE_ID FROM UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID=(SELECT
    UM_ID FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: GetRoleListSQLWithEscapeH2
  value: SELECT UM_ROLE_NAME, UM_TENANT_ID, UM_SHARED_ROLE FROM UM_ROLE WHERE UM_ROLE_NAME
    LIKE ? ESCAPE ? AND UM_TENANT_ID=? AND UM_SHARED_ROLE =FALSE ORDER BY UM_ROLE_NAME
- name: ReadGroups
  value: "true"
- name: Description
  value: ABC Employees UserStore in DEV
- name: RemoveUserFromRoleWithIDSQL
  value: DELETE FROM UM_USER_ROLE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    UM_USER_ID=? AND UM_TENANT_ID=?) AND UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE WHERE
    UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: DeleteUserSQLCaseInsensitive
  value: DELETE FROM UM_USER WHERE LOWER(UM_USER_NAME) = LOWER(?) AND UM_TENANT_ID=?
- name: UsersRoleSQLCaseInsensitive
  value: SELECT UM_USER_NAME,UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE,UM_USER WHERE
    LOWER(UM_USER.UM_USER_NAME) IN(?) AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND
    UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: validatorClassName
  value: ""
- name: SelectUserIDWithIDSQL
  value: SELECT UM_USER.UM_REQUIRE_CHANGE, UM_USER.UM_CHANGED_TIME FROM UM_USER WHERE
    UM_USER_ID=? AND UM_TENANT_ID=?
- name: UserFilterPaginatedSQL-db2
  value: SELECT UM_USER_NAME FROM (SELECT ROW_NUMBER() OVER (ORDER BY UM_USER_NAME)
    AS rn, U.*  FROM UM_USER AS U) WHERE UM_USER_NAME LIKE ? AND UM_TENANT_ID = ?
    AND rn BETWEEN ? AND ?
- name: GetUserNameFromTenantIDSQL
  value: SELECT UM_USER_NAME FROM UM_USER WHERE UM_TENANT_ID=?
- name: AddUserToRoleSQLCaseInsensitive
  value: INSERT INTO UM_USER_ROLE (UM_USER_ID, UM_ROLE_ID, UM_TENANT_ID) VALUES ((SELECT
    UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?),(SELECT
    UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?), ?)
- name: GetUserLisForPropertyWithIDSQL
  value: SELECT DISTINCT UM_USER.UM_USER_ID FROM UM_USER, UM_USER_ATTRIBUTE WHERE
    UM_USER_ATTRIBUTE.UM_USER_ID = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME
    =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=?
    AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: CountUsersWithClaimSQL
  value: SELECT COUNT(UM_USER_ID) AS RESULT FROM UM_USER_ATTRIBUTE WHERE UM_ATTR_NAME
    = ? AND UM_TENANT_ID = ? AND UM_ATTR_VALUE LIKE ? AND UM_PROFILE_ID = ?
- name: RemoveUserFromSharedRoleSQLCaseInsensitive
  value: DELETE FROM UM_SHARED_USER_ROLE WHERE UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE
    WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?) AND UM_USER_TENANT_ID=?
    AND UM_ROLE_TENANT_ID = ?
- name: RolenameJavaRegEx
  value: '[a-zA-Z0-9._\-|//]{3,30}$'
- name: GetPaginatedUserLisForPropertySQL-oracle
  value: SELECT UM_USER_NAME FROM (SELECT UM_USER_NAME, rownum AS rnum FROM (SELECT
    DISTINCT UM_USER_NAME FROM UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=? ORDER BY UM_USER_NAME )WHERE rownum <= ?) WHERE  rnum
    > ?
- name: GetUserIDFromUserNameWithIDSQL
  value: SELECT UM_ID FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?
- name: UsersRoleWithIDSQL
  value: SELECT UM_USER.UM_USER_ID,UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER
    WHERE UM_USER.UM_USER_ID IN (?) AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND
    UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: url
  value: jdbc:mysql://localhost:3306/iam_userstore?useSSL=false&allowPublicKeyRetrieval=true
- name: AddRoleToUserSQL
  value: INSERT INTO UM_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_TENANT_ID) VALUES ((SELECT
    UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?),(SELECT UM_ID FROM
    UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?), ?)
- name: UserFilterPaginatedSQLCaseInsensitive-db2
  value: SELECT UM_USER_NAME FROM (SELECT ROW_NUMBER() OVER (ORDER BY UM_USER_NAME)
    AS rn, U.*  FROM UM_USER AS U) WHERE UM_USER_NAME LIKE LOWER(?) AND UM_TENANT_ID
    = ? AND rn BETWEEN ? AND ?
- name: UpdateUserPasswordSQL
  value: UPDATE UM_USER SET UM_USER_PASSWORD= ?, UM_SALT_VALUE=?, UM_REQUIRE_CHANGE=?,
    UM_CHANGED_TIME=? WHERE UM_USER_NAME= ? AND UM_TENANT_ID=?
- name: UserFilterPaginatedWithIDSQLCaseInsensitive
  value: SELECT UM_USER_ID, UM_USER_NAME FROM UM_USER WHERE LOWER(UM_USER_NAME) LIKE
    LOWER(?) AND UM_TENANT_ID=? ORDER BY UM_USER_NAME ASC LIMIT ? OFFSET ?
- name: fairQueue
  value: "true"
- name: timeBetweenEvictionRunsMillis
  value: "5000"
- name: maxAge
  value: ""
- name: GetRoleListSQLH2
  value: SELECT UM_ROLE_NAME, UM_TENANT_ID, UM_SHARED_ROLE FROM UM_ROLE WHERE UM_ROLE_NAME
    LIKE ? AND UM_TENANT_ID=? AND UM_SHARED_ROLE =FALSE ORDER BY UM_ROLE_NAME
- name: UserFilterPaginatedSQLCaseInsensitive-mssql
  value: SELECT UM_USER_NAME FROM (SELECT UM_USER_NAME,UM_TENANT_ID, ROW_NUMBER()
    OVER (ORDER BY UM_USER_NAME) AS RowNum FROM UM_USER) AS P WHERE P.UM_USER_NAME
    LIKE LOWER(?) AND P.UM_TENANT_ID= ? AND P.RowNum BETWEEN ? AND ?
- name: testOnReturn
  value: "false"
- name: GetRoleListSQL
  value: SELECT UM_ROLE_NAME, UM_TENANT_ID, UM_SHARED_ROLE FROM UM_ROLE WHERE UM_ROLE_NAME
    LIKE ? AND UM_TENANT_ID=? AND UM_SHARED_ROLE ='0' ORDER BY UM_ROLE_NAME
- name: OnDeleteUserRemoveUserAttributeSQL
  value: DELETE FROM UM_USER_ATTRIBUTE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE UM_USER_NAME=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: UpdateUserPropertySQLCaseInsensitive
  value: UPDATE UM_USER_ATTRIBUTE SET UM_ATTR_VALUE=? WHERE UM_USER_ID=(SELECT UM_ID
    FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?) AND UM_ATTR_NAME=?
    AND UM_PROFILE_ID=? AND UM_TENANT_ID=?
- name: OnDeleteUserRemoveUserRoleMappingWithIDSQL
  value: DELETE FROM UM_USER_ROLE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    UM_USER_ID=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: DeleteUserPropertySQLCaseInsensitive
  value: DELETE FROM UM_USER_ATTRIBUTE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?) AND UM_ATTR_NAME=? AND
    UM_PROFILE_ID=? AND UM_TENANT_ID=?
- name: GetUserListForPropertySQLWithEscape
  value: SELECT DISTINCT UM_USER_NAME FROM UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    LIKE ? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: UserFilterWithIDWithEscapeSQL
  value: SELECT UM_USER_ID, UM_USER_NAME FROM UM_USER WHERE UM_USER_NAME LIKE ? ESCAPE
    ? AND UM_TENANT_ID=? ORDER BY UM_USER_NAME
- name: RemoveUserFromRoleSQL
  value: DELETE FROM UM_USER_ROLE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    UM_USER_NAME=? AND UM_TENANT_ID=?) AND UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE WHERE
    UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: AddRolePermissionSQL
  value: AddRolePermissionSQL
- name: OnDeleteUserRemovePermissionsSQL
  value: OnDeleteUserRemovePermissionsSQL
- name: SelectUserWithIDSQLCaseInsensitive
  value: SELECT UM_USER.UM_USER_ID, UM_USER.UM_USER_NAME, UM_USER.UM_USER_PASSWORD,
    UM_USER.UM_SALT_VALUE, UM_USER.UM_REQUIRE_CHANGE, UM_USER.UM_CHANGED_TIME FROM
    UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID = UM_USER.UM_ID
    AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND LOWER(UM_USER_ATTRIBUTE.UM_ATTR_VALUE)
    =LOWER(?) AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: AddUserSQL
  value: INSERT INTO UM_USER (UM_USER_NAME, UM_USER_PASSWORD, UM_SALT_VALUE, UM_REQUIRE_CHANGE,
    UM_CHANGED_TIME, UM_TENANT_ID) VALUES (?, ?, ?, ?, ?, ?)
- name: UpdateUserPasswordSQLCaseInsensitive
  value: UPDATE UM_USER SET UM_USER_PASSWORD= ?, UM_SALT_VALUE=?, UM_REQUIRE_CHANGE=?,
    UM_CHANGED_TIME=? WHERE LOWER(UM_USER_NAME)= LOWER(?) AND UM_TENANT_ID=?
- name: validationInterval
  value: ""
- name: jmxEnabled
  value: "true"
- name: IsRoleExistingSQL
  value: SELECT UM_ID FROM UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?
- name: UserRoleSQLCaseInsensitive
  value: SELECT UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE LOWER(UM_USER.UM_USER_NAME)=LOWER(?)
    AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID
    AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: GetTenantIDFromUserNameSQLCaseInsensitive
  value: SELECT UM_TENANT_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?)
- name: commitOnReturn
  value: "false"
- name: RemoveRoleFromUserWithIDSQL
  value: DELETE FROM UM_USER_ROLE WHERE UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE WHERE
    UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    UM_USER_ID=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: testWhileIdle
  value: "false"
- name: ClaimOperationsSupported
  value: "true"
- name: UserNameUniqueAcrossTenantsSQLWithID
  value: SELECT UM_ID FROM UM_USER_ATTRIBUTE WHERE UM_ATTR_NAME=? AND UM_ATTR_VALUE=?
- name: PasswordJavaRegEx
  value: ^[\S]{5,30}$
- name: UserNameUniqueAcrossTenantsSQLCaseInsensitiveWithID
  value: SELECT UM_ID FROM UM_USER_ATTRIBUTE WHERE UM_ATTR_NAME=? AND LOWER(UM_ATTR_VALUE)=LOWER(?)
- name: UsernameJavaRegEx
  value: '[a-zA-Z0-9._\-|//]{3,30}$'
- name: UserRolesCacheEnabled
  value: "true"
- name: UserFilterSQL
  value: SELECT UM_USER_NAME FROM UM_USER WHERE UM_USER_NAME LIKE ? AND UM_TENANT_ID=?
    ORDER BY UM_USER_NAME
- name: DeleteUserPropertySQL
  value: DELETE FROM UM_USER_ATTRIBUTE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE UM_USER_NAME=? AND UM_TENANT_ID=?) AND UM_ATTR_NAME=? AND UM_PROFILE_ID=?
    AND UM_TENANT_ID=?
- name: GetUserPropertyForProfileSQLCaseInsensitive
  value: SELECT UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE, UM_USER WHERE UM_USER.UM_ID
    = UM_USER_ATTRIBUTE.UM_USER_ID AND LOWER(UM_USER.UM_USER_NAME)=LOWER(?) AND UM_ATTR_NAME=?
    AND UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: AddRoleToUserSQLCaseInsensitive-openedge
  value: INSERT INTO UM_USER_ROLE (UM_ROLE_ID, UM_USER_ID, UM_TENANT_ID) SELECT UR.UM_ID,
    UU.UM_ID, ? FROM UM_ROLE UR, UM_USER UU WHERE UR.UM_ROLE_NAME=? AND UR.UM_TENANT_ID=?
    AND LOWER(UU.UM_USER_NAME)=LOWER(?) AND UU.UM_TENANT_ID=?
- name: CaseInsensitiveUsername
  value: "false"
- name: AddUserToRoleSQLCaseInsensitive-openedge
  value: INSERT INTO UM_USER_ROLE (UM_USER_ID, UM_ROLE_ID, UM_TENANT_ID) SELECT UU.UM_ID,
    UR.UM_ID, ? FROM UM_USER UU, UM_ROLE UR WHERE LOWER(UU.UM_USER_NAME)=LOWER(?)
    AND UU.UM_TENANT_ID=? AND UR.UM_ROLE_NAME=? AND UR.UM_TENANT_ID=?
- name: GetUsersPropertiesForProfileWithIDSQL
  value: SELECT UM_USER.UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE FROM UM_USER_ATTRIBUTE,
    UM_USER WHERE UM_USER.UM_ID = UM_USER_ATTRIBUTE.UM_USER_ID AND UM_USER.UM_USER_ID
    IN (?) AND UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: UpdateUserPasswordWithIDSQL
  value: UPDATE UM_USER SET UM_USER_PASSWORD= ?, UM_SALT_VALUE=?, UM_REQUIRE_CHANGE=?,
    UM_CHANGED_TIME=? WHERE UM_USER_ID= ? AND UM_TENANT_ID=?
- name: driverName
  value: com.mysql.jdbc.Driver
- name: RemoveRoleFromUserSQLCaseInsensitive
  value: DELETE FROM UM_USER_ROLE WHERE UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE WHERE
    UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_USER_ID=(SELECT UM_ID FROM UM_USER WHERE
    LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: SelectUserIDFromUserNameSQL
  value: SELECT UM_USER_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?
- name: OnDeleteUserRemoveUserAttributeWithIDSQL
  value: DELETE FROM UM_USER_ATTRIBUTE WHERE UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE UM_USER_ID=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: RemoveUserFromSharedRoleWithIDSQL
  value: DELETE FROM UM_SHARED_USER_ROLE WHERE UM_ROLE_ID=(SELECT UM_ID FROM UM_ROLE
    WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?) AND UM_USER_ID=(SELECT UM_ID FROM UM_USER
    WHERE UM_USER_ID=? AND UM_TENANT_ID=?) AND UM_USER_TENANT_ID=? AND UM_ROLE_TENANT_ID
    = ?
- name: AddUserPropertySQL
  value: INSERT INTO UM_USER_ATTRIBUTE (UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE, UM_PROFILE_ID,
    UM_TENANT_ID) VALUES ((SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?),
    ?, ?, ?, ?)
- name: alternateUsernameAllowed
  value: "false"
- name: suspectTimeout
  value: ""
- name: SelectUserNameSQL
  value: SELECT UM_USER_ID, UM_USER_NAME, UM_USER_PASSWORD, UM_SALT_VALUE, UM_REQUIRE_CHANGE,
    UM_CHANGED_TIME FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?
- name: UserFilterPaginatedWithIDSQL
  value: SELECT UM_USER_ID, UM_USER_NAME FROM UM_USER WHERE UM_USER_NAME LIKE ? AND
    UM_TENANT_ID=? ORDER BY UM_USER_NAME ASC LIMIT ? OFFSET ?
- name: SelectUserSQLCaseInsensitive
  value: SELECT * FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?
- name: removeAbandonedTimeout
  value: ""
- name: CountUsersSQL
  value: SELECT COUNT(UM_USER_NAME) AS RESULT FROM UM_USER WHERE UM_USER_NAME LIKE
    ? AND UM_TENANT_ID = ?
- name: AddUserPermissionSQL
  value: AddUserPermission
- name: UserFilterPaginatedSQLCaseInsensitiveCount
  value: SELECT COUNT (UM_USER_NAME) FROM UM_USER WHERE LOWER(UM_USER_NAME) LIKE LOWER(?)
    AND UM_TENANT_ID=?
- name: GetUserListForClaimValueSQL
  value: SELECT DISTINCT UM_USER_NAME FROM UM_USER, UM_USER_ATTRIBUTE WHERE UM_USER_ATTRIBUTE.UM_USER_ID
    = UM_USER.UM_ID AND UM_USER_ATTRIBUTE.UM_ATTR_NAME =? AND UM_USER_ATTRIBUTE.UM_ATTR_VALUE
    =? AND UM_USER_ATTRIBUTE.UM_PROFILE_ID=? AND UM_USER_ATTRIBUTE.UM_TENANT_ID=?
    AND UM_USER.UM_TENANT_ID=?
- name: UserNameUniqueAcrossTenantsSQL
  value: SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=?
- name: CountRetrieverClass
  value: org.wso2.carbon.identity.user.store.count.jdbc.JDBCUserStoreCountRetriever
- name: IsUserExistingSQLCaseInsensitive
  value: SELECT UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?) AND UM_TENANT_ID=?
- name: GetUserProfileNamesSQL
  value: SELECT DISTINCT UM_PROFILE_ID FROM UM_USER_ATTRIBUTE WHERE UM_USER_ID=(SELECT
    UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?
- name: UserFilterWithIDSQL
  value: SELECT UM_USER_ID, UM_USER_NAME FROM UM_USER WHERE UM_USER_NAME LIKE ? AND
    UM_TENANT_ID=? ORDER BY UM_USER_NAME
- name: defaultTransactionIsolation
  value: ""
- name: GetUserIDFromUserNameSQL
  value: SELECT UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?
- name: AddUserToRoleSQL-mssql
  value: INSERT INTO UM_USER_ROLE (UM_USER_ID, UM_ROLE_ID, UM_TENANT_ID) SELECT (SELECT
    UM_ID FROM UM_USER WHERE UM_USER_NAME=? AND UM_TENANT_ID=?),(SELECT UM_ID FROM
    UM_ROLE WHERE UM_ROLE_NAME=? AND UM_TENANT_ID=?),(?)
- name: IsUserExistingWithIDSQL
  value: SELECT UM_ID FROM UM_USER WHERE UM_USER_ID=? AND UM_TENANT_ID=?
- name: UsersRoleSQL
  value: SELECT UM_USER_NAME,UM_ROLE_NAME FROM UM_USER_ROLE, UM_ROLE, UM_USER WHERE
    UM_USER.UM_USER_NAME IN (?) AND UM_USER.UM_ID=UM_USER_ROLE.UM_USER_ID AND UM_ROLE.UM_ID=UM_USER_ROLE.UM_ROLE_ID
    AND UM_USER_ROLE.UM_TENANT_ID=? AND UM_ROLE.UM_TENANT_ID=? AND UM_USER.UM_TENANT_ID=?
- name: StoreSaltedPassword
  value: "true"
- name: RolenameJavaScriptRegEx
  value: ^[\S]{5,30}$
- name: AddUserPropertySQLCaseInsensitive
  value: INSERT INTO UM_USER_ATTRIBUTE (UM_USER_ID, UM_ATTR_NAME, UM_ATTR_VALUE, UM_PROFILE_ID,
    UM_TENANT_ID) VALUES ((SELECT UM_ID FROM UM_USER WHERE LOWER(UM_USER_NAME)=LOWER(?)
    AND UM_TENANT_ID=?), ?, ?, ?, ?)
- name: accessToUnderlyingConnectionAllowed
  value: ""
- name: GetProfileNamesSQL
  value: SELECT DISTINCT UM_PROFILE_ID FROM UM_USER_ATTRIBUTE WHERE UM_TENANT_ID=?
- name: UsernameJavaRegExViolationErrorMsg
  value: Username pattern policy violated.
typeId: VW5pcXVlSURKREJDVXNlclN0b3JlTWFuYWdlcg
typeName: UniqueIDJDBCUserStoreManager
